<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>

    <!-- 读取配置文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties,classpath*:/sso.properties"/>

   <!-- 单点登录配置 -->
	<bean id="credentialsMatcher"
		class="com.haiersoft.ccli.system.sso.CostomCredentialsMatch">
		<constructor-arg ref="shiroEhcacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="3" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<!-- SsoRealm实现 -->
	<bean id="ssoRealm"
		class="com.haiersoft.ccli.system.sso.SsoUserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
	</bean>
		<!--增加免密登录功能，使用自定义token -->
	<bean id="customFilter"
		class="com.haiersoft.ccli.system.sso.CustomFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
	</bean>
	
   <!-- 单点登录配置 -->
   
	<!-- Realm实现 -->
	<bean id="userRealm"
		class="com.haiersoft.ccli.system.service.UserRealm">
	</bean>

    <!-- Shiro的主要业务层对象基于web的应用程序 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
<!--         <property name="realm" ref="ssoRealm"/> --> <!-- 开启单点登录时配置 -->
        <property name="cacheManager" ref="shiroEhcacheManager"/>
    </bean>

    <!-- Shiro Filter -->
    <bean id="myCaptchaFilter" class="com.haiersoft.ccli.system.utils.FormAuthenticationCaptchaFilter"/>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <!-- <property name="loginUrl" value="${sso.serverUrl}"/> --> <!-- 单点登录配置 -->
        <property name="successUrl" value="/"/>

        <property name="filters">
            <map>
                <entry key="authc" value-ref="myCaptchaFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
            	/api/users/** = anon
                /outsidequery/** = anon
                /CodeCallback/** = anon
				/cclisso/** = anon
				/getUserInfo  = anon            	
                /static/** = anon
                /remote/** = anon
                /cclisso/** = anon
                /ws/** = anon
                /wsgate/** = anon
                /staple/** = anon
                /wms/bulk/** = anon
                /wms/passPortApi/** = anon
                /platform/api/reservation/** = anon
                /login = authc
                /login/** = authc
                /** = user
                /rest/** = authcBasic
            </value>
        </property>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:cache/ehcache-shiro.xml"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>